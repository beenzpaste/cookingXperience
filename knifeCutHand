using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class knifeCutHand : MonoBehaviour
{
    public GameObject hand; // Reference to the hand object
    public WarningSignManager warningSignManager; // reference to WarningSignManager script

    // tracks whether warning sign is visible
    private bool warningActive = false;


    private void OnTriggerEnter(Collider other)
    {
        if (other.gameObject == hand)
        {
            // check if hand sensor is touching knife
            Debug.Log("Is Touching");

            SetEnvironmentRed();
            ShowWarningSign();

            // environment is reset and warning sign is hidden after 5 seconds
            Invoke("ResetEnvironment", 5f);
            Invoke("HideWarningSign", 5f);

            // check if right hand controller is connected
            if (OVRInput.IsControllerConnected(OVRInput.Controller.RTouch))
            {
                // Trigger haptic feedback on the right hand controller for 0.5 seconds
                OVRInput.SetControllerVibration(0.5f, 1.0f, OVRInput.Controller.RTouch);
            }
        }

    }

    private void SetEnvironmentRed()
    {
        // environment color is set to red
        RenderSettings.ambientLight = Color.red;
    }

    private void ShowWarningSign()
    {
        // the ShowWarningSign method is called from the WarningSignManager script
        warningSignManager.ShowWarningSign();
        warningActive = true;
    }

    private void HideWarningSign()
    {
        //the HideWarningSign method is called from the WarningSignManager script
        warningSignManager.HideWarningSign();
    }

    private void ResetEnvironment()
    {
        // the environment color is reset to its original state
        RenderSettings.ambientLight = Color.white;
        warningActive = false;
    }

}
