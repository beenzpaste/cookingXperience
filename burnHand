using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;

public class burnHand : MonoBehaviour
{
    public GameObject handSensor;
    public GameObject stoveHeat;
    public AudioClip collisionSound;
    public WarningSignManager warningSignManager;

    private void OnTriggerEnter(Collider other)
    {

        if (other.gameObject == handSensor)
        {
            Debug.Log("Hot!!!");
            
            if (stoveHeat.activeSelf)
            {
                SetEnvironmentRed();
                ShowWarningSign();
                AudioSource.PlayClipAtPoint(collisionSound, transform.position);

                // Call following functions after 5 seconds
                Invoke("ResetEnvironment", 5f);
                Invoke("HideWarningSign", 5f);

                // Check if right hand controller is connected
                if (OVRInput.IsControllerConnected(OVRInput.Controller.RTouch))
                {
                    // Trigger haptic feedback on the right hand controller for 0.5 seconds
                    OVRInput.SetControllerVibration(0.5f, 1.0f, OVRInput.Controller.RTouch);
                }
            }
        }
    }
    private void SetEnvironmentRed()
    {
        // Set the environment color to red
        RenderSettings.ambientLight = Color.red;
    }
    private void ShowWarningSign()
    {
        // Call the MoveSign method from the WarningSignManager script
        Vector3 newCoordinate = new Vector3(2.2f, 0.5f, 1.0f);
        warningSignManager.MoveSign(newCoordinate);

        // Call the ShowWarningSign method from the WarningSignManager script
        warningSignManager.ShowWarningSign();
    }

    private void HideWarningSign()
    {
        // Call the HideWarningSign method from the WarningSignManager script
        warningSignManager.HideWarningSign();
    }

    private void ResetEnvironment()
    {
        // Reset the environment color 
        RenderSettings.ambientLight = Color.white;
    }

}

